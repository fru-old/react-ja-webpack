var webpack = require('webpack');
var webpackConfig = require('./test-webpack-conf');
var watcher = require('chokidar').watch('./test', {ignoreInitial: true});
var recursive = require('recursive-readdir');
var fs = require('fs');

function generateMainTestFile(){
	console.log('Regenerate ' + 'start-all-tests.js');
	var result = [
		'// Autogenerated. Dont change this file manually.\n'
	];
	recursive('./test', function (err, files) {
		for(var i = 0; i < files.length; i++){
			var filePath = files[i].replace(/^test/, '.').replace(/\\/i, '/');
			if(filePath !== './' + 'start-all-tests.js'){
				result.push("import {test" + i + "} from '" + filePath + "'");
			}
		}
		fs.writeFile('./test/' + 'start-all-tests.js', result.join('\n'), function(err) {
			if(err) {
				return console.log(err);
			}
		});
	});
}

watcher.on('add', generateMainTestFile)
	.on('unlink', generateMainTestFile)
	.on('addDir', generateMainTestFile)
	.on('unlinkDir', generateMainTestFile);
	
generateMainTestFile();

module.exports = function(config) {
  config.set({

    files: [
      '../node_modules/phantomjs-polyfill/bind-polyfill.js',
      '../test/start-all-tests.js'
    ],

    frameworks: ['mocha'],

    preprocessors: {
      '../test/start-all-tests.js': ['webpack']
    },

    reporters: ['spec', 'coverage'],

    coverageReporter: {
      type: 'html',
      dir: '../dist/coverage/'
    },

	webpack: webpackConfig,

    webpackMiddleware: {
      noInfo: true
    },

    plugins: [
      require('karma-webpack'),
      require('istanbul-instrumenter-loader'),
      require('karma-mocha'),
      require('karma-coverage'),
      require('karma-phantomjs-launcher'),
      require('karma-spec-reporter')
    ],

    browsers: ['PhantomJS']
  });
};